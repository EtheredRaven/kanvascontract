{
    "methods": {
        "name": {
            "argument": "kanvascontract.name_arguments",
            "return": "kanvascontract.name_result",
            "description": "Returns the token's name",
            "entry-point": "0x82a3537f",
            "read-only": true
        },
        "symbol": {
            "argument": "kanvascontract.symbol_arguments",
            "return": "kanvascontract.symbol_result",
            "description": "Returns the token's symbol",
            "entry-point": "0xb76a7ca1",
            "read-only": true
        },
        "decimals": {
            "argument": "kanvascontract.decimals_arguments",
            "return": "kanvascontract.decimals_result",
            "description": "Returns the token's decimals precision",
            "entry-point": "0xee80fd2f",
            "read-only": true
        },
        "total_supply": {
            "argument": "kanvascontract.total_supply_arguments",
            "return": "kanvascontract.total_supply_result",
            "description": "Returns the token's total supply",
            "entry-point": "0xb0da3934",
            "read-only": true
        },
        "balance_of": {
            "argument": "kanvascontract.balance_of_arguments",
            "return": "kanvascontract.balance_of_result",
            "description": "Checks the balance at an address",
            "entry-point": "0x5c721497",
            "read-only": true
        },
        "allowance": {
            "argument": "kanvascontract.allowance_arguments",
            "return": "kanvascontract.allowance_result",
            "description": "Get balance of an account2",
            "entry-point": "0x32f09fa1",
            "read-only": true
        },
        "approve": {
            "argument": "kanvascontract.approve_arguments",
            "return": "kanvascontract.empty_message",
            "description": "Approve tokens",
            "entry-point": "0x74e21680",
            "read-only": false
        },
        "transfer": {
            "argument": "kanvascontract.transfer_arguments",
            "return": "kanvascontract.empty_message",
            "description": "Transfers the token",
            "entry-point": "0x27f576ca",
            "read-only": false
        },
        "mint": {
            "argument": "kanvascontract.mint_arguments",
            "return": "kanvascontract.empty_message",
            "description": "Mints the token",
            "entry-point": "0xdc6f17bb",
            "read-only": false
        },
        "burn": {
            "argument": "kanvascontract.burn_arguments",
            "return": "kanvascontract.empty_message",
            "description": "Burns the token",
            "entry-point": "0x859facc5",
            "read-only": false
        },
        "pixel_count_of": {
            "argument": "kanvascontract.pixel_count_of_arguments",
            "return": "kanvascontract.pixel_count_of_result",
            "description": "Checks the pixels balance at an address",
            "entry-point": "0x3c315b09",
            "read-only": true
        },
        "pixels_per_tx_of": {
            "argument": "kanvascontract.pixels_per_tx_of_arguments",
            "return": "kanvascontract.pixels_per_tx_of_result",
            "description": "Pixels capacity (place or erase) of an adress based on the NFT owned",
            "entry-point": "0x05f688ca",
            "read-only": true
        },
        "place_pixel": {
            "argument": "kanvascontract.place_pixel_arguments",
            "return": "kanvascontract.empty_message",
            "description": "Place a new pixel",
            "entry-point": "0xb20ac2e3",
            "read-only": false
        },
        "place_pixels": {
            "argument": "kanvascontract.place_pixels_arguments",
            "return": "kanvascontract.empty_message",
            "description": "Place a pack of new pixels",
            "entry-point": "0xce7c0995",
            "read-only": false
        },
        "erase_pixel": {
            "argument": "kanvascontract.erase_pixel_arguments",
            "return": "kanvascontract.empty_message",
            "description": "Erase an existing pixel",
            "entry-point": "0xb6a63236",
            "read-only": false
        },
        "erase_pixels": {
            "argument": "kanvascontract.erase_pixels_arguments",
            "return": "kanvascontract.empty_message",
            "description": "Erase a pack of existing pixels",
            "entry-point": "0x9746283f",
            "read-only": false
        },
        "pixel_at": {
            "argument": "kanvascontract.pixel_at_arguments",
            "return": "kanvascontract.pixel_at_result",
            "description": "Query a pixel at a specific position",
            "entry-point": "0x0d4a1a54",
            "read-only": true
        },
        "canvas_dimensions": {
            "argument": "kanvascontract.canvas_dimensions_arguments",
            "return": "kanvascontract.canvas_dimensions_result",
            "description": "Query the canvas dimensions",
            "entry-point": "0x3489c55e",
            "read-only": true
        },
        "set_canvas_dimensions": {
            "argument": "kanvascontract.set_canvas_dimensions_arguments",
            "return": "kanvascontract.empty_message",
            "description": "Set the canvas dimensions",
            "entry-point": "0xc3268afe",
            "read-only": false
        }
    },
    "types": "CrQZCiNhc3NlbWJseS9wcm90by9rYW52YXNjb250cmFjdC5wcm90bxIOa2FudmFzY29udHJhY3QaFGtvaW5vcy9vcHRpb25zLnByb3RvIg8KDWVtcHR5X21lc3NhZ2UiIgoGdWludDY0EhgKBXZhbHVlGAEgASgEQgIwAVIFdmFsdWUiEAoObmFtZV9hcmd1bWVudHMiIwoLbmFtZV9yZXN1bHQSFAoFdmFsdWUYASABKAlSBXZhbHVlIhIKEHN5bWJvbF9hcmd1bWVudHMiJQoNc3ltYm9sX3Jlc3VsdBIUCgV2YWx1ZRgBIAEoCVIFdmFsdWUiFAoSZGVjaW1hbHNfYXJndW1lbnRzIicKD2RlY2ltYWxzX3Jlc3VsdBIUCgV2YWx1ZRgBIAEoDVIFdmFsdWUiGAoWdG90YWxfc3VwcGx5X2FyZ3VtZW50cyIvChN0b3RhbF9zdXBwbHlfcmVzdWx0EhgKBXZhbHVlGAEgASgEQgIwAVIFdmFsdWUiMgoUYmFsYW5jZV9vZl9hcmd1bWVudHMSGgoFb3duZXIYASABKAxCBIC1GAZSBW93bmVyIi0KEWJhbGFuY2Vfb2ZfcmVzdWx0EhgKBXZhbHVlGAEgASgEQgIwAVIFdmFsdWUiUQoTYWxsb3dhbmNlX2FyZ3VtZW50cxIaCgVvd25lchgBIAEoDEIEgLUYBlIFb3duZXISHgoHc3BlbmRlchgCIAEoDEIEgLUYBlIHc3BlbmRlciIsChBhbGxvd2FuY2VfcmVzdWx0EhgKBXZhbHVlGAEgASgEQgIwAVIFdmFsdWUiaQoRYXBwcm92ZV9hcmd1bWVudHMSGgoFb3duZXIYASABKAxCBIC1GAZSBW93bmVyEh4KB3NwZW5kZXIYAiABKAxCBIC1GAZSB3NwZW5kZXISGAoFdmFsdWUYAyABKARCAjABUgV2YWx1ZSJeChJ0cmFuc2Zlcl9hcmd1bWVudHMSGAoEZnJvbRgBIAEoDEIEgLUYBlIEZnJvbRIUCgJ0bxgCIAEoDEIEgLUYBlICdG8SGAoFdmFsdWUYAyABKARCAjABUgV2YWx1ZSJACg5taW50X2FyZ3VtZW50cxIUCgJ0bxgBIAEoDEIEgLUYBlICdG8SGAoFdmFsdWUYAiABKARCAjABUgV2YWx1ZSJECg5idXJuX2FyZ3VtZW50cxIYCgRmcm9tGAEgASgMQgSAtRgGUgRmcm9tEhgKBXZhbHVlGAIgASgEQgIwAVIFdmFsdWUiNgoYcGl4ZWxfY291bnRfb2ZfYXJndW1lbnRzEhoKBW93bmVyGAEgASgMQgSAtRgGUgVvd25lciIxChVwaXhlbF9jb3VudF9vZl9yZXN1bHQSGAoFdmFsdWUYASABKARCAjABUgV2YWx1ZSI4ChpwaXhlbHNfcGVyX3R4X29mX2FyZ3VtZW50cxIaCgVvd25lchgBIAEoDEIEgLUYBlIFb3duZXIiMwoXcGl4ZWxzX3Blcl90eF9vZl9yZXN1bHQSGAoFdmFsdWUYASABKARCAjABUgV2YWx1ZSJ1ChVwbGFjZV9waXhlbF9hcmd1bWVudHMSGAoEZnJvbRgBIAEoDEIEgLUYBlIEZnJvbRJCCg5waXhlbF90b19wbGFjZRgCIAEoCzIcLmthbnZhc2NvbnRyYWN0LnBpeGVsX29iamVjdFIMcGl4ZWxUb1BsYWNlInMKFnBsYWNlX3BpeGVsc19hcmd1bWVudHMSWQoVcGxhY2VfcGl4ZWxfYXJndW1lbnRzGAEgAygLMiUua2FudmFzY29udHJhY3QucGxhY2VfcGl4ZWxfYXJndW1lbnRzUhNwbGFjZVBpeGVsQXJndW1lbnRzImEKFWVyYXNlX3BpeGVsX2FyZ3VtZW50cxIYCgRmcm9tGAEgASgMQgSAtRgGUgRmcm9tEhYKBHBvc1gYAiABKARCAjABUgRwb3NYEhYKBHBvc1kYAyABKARCAjABUgRwb3NZInMKFmVyYXNlX3BpeGVsc19hcmd1bWVudHMSWQoVZXJhc2VfcGl4ZWxfYXJndW1lbnRzGAEgAygLMiUua2FudmFzY29udHJhY3QuZXJhc2VfcGl4ZWxfYXJndW1lbnRzUhNlcmFzZVBpeGVsQXJndW1lbnRzIkQKEnBpeGVsX2F0X2FyZ3VtZW50cxIWCgRwb3NYGAEgASgEQgIwAVIEcG9zWBIWCgRwb3NZGAIgASgEQgIwAVIEcG9zWSJFCg9waXhlbF9hdF9yZXN1bHQSMgoFcGl4ZWwYASABKAsyHC5rYW52YXNjb250cmFjdC5waXhlbF9vYmplY3RSBXBpeGVsIh0KG2NhbnZhc19kaW1lbnNpb25zX2FyZ3VtZW50cyJiChhjYW52YXNfZGltZW5zaW9uc19yZXN1bHQSIQoMY2FudmFzX3dpZHRoGAEgASgEUgtjYW52YXNXaWR0aBIjCg1jYW52YXNfaGVpZ2h0GAIgASgEUgxjYW52YXNIZWlnaHQiaQofc2V0X2NhbnZhc19kaW1lbnNpb25zX2FyZ3VtZW50cxIhCgxjYW52YXNfd2lkdGgYASABKARSC2NhbnZhc1dpZHRoEiMKDWNhbnZhc19oZWlnaHQYAiABKARSDGNhbnZhc0hlaWdodCIqCg5iYWxhbmNlX29iamVjdBIYCgV2YWx1ZRgBIAEoBEICMAFSBXZhbHVlIi4KEnBpeGVsX2NvdW50X29iamVjdBIYCgV2YWx1ZRgBIAEoBEICMAFSBXZhbHVlItgBCgxwaXhlbF9vYmplY3QSFgoEcG9zWBgBIAEoBEICMAFSBHBvc1gSFgoEcG9zWRgCIAEoBEICMAFSBHBvc1kSFAoDcmVkGAMgASgEQgIwAVIDcmVkEhgKBWdyZWVuGAQgASgEQgIwAVIFZ3JlZW4SFgoEYmx1ZRgFIAEoBEICMAFSBGJsdWUSGAoFYWxwaGEYBiABKARCAjABUgVhbHBoYRIaCghtZXRhZGF0YRgHIAEoCVIIbWV0YWRhdGESGgoFb3duZXIYCCABKAxCBIC1GAZSBW93bmVyIjwKCm1pbnRfZXZlbnQSFAoCdG8YASABKAxCBIC1GAZSAnRvEhgKBXZhbHVlGAIgASgEQgIwAVIFdmFsdWUiQAoKYnVybl9ldmVudBIYCgRmcm9tGAEgASgMQgSAtRgGUgRmcm9tEhgKBXZhbHVlGAIgASgEQgIwAVIFdmFsdWUipAEKDnRyYW5zZmVyX2V2ZW50EhgKBGZyb20YASABKAxCBIC1GAZSBGZyb20SFAoCdG8YAiABKAxCBIC1GAZSAnRvEhgKBXZhbHVlGAMgASgEQgIwAVIFdmFsdWUSJQoMZnJvbV9iYWxhbmNlGAQgASgEQgIwAVILZnJvbUJhbGFuY2USIQoKdG9fYmFsYW5jZRgFIAEoBEICMAFSCXRvQmFsYW5jZSJlCg1hcHByb3ZlX2V2ZW50EhoKBW93bmVyGAEgASgMQgSAtRgGUgVvd25lchIeCgdzcGVuZGVyGAIgASgMQgSAtRgGUgdzcGVuZGVyEhgKBXZhbHVlGAMgASgEQgIwAVIFdmFsdWUijQIKEnBpeGVsX3BsYWNlZF9ldmVudBIYCgRmcm9tGAEgASgMQgSAtRgGUgRmcm9tEisKDnByZXZpb3VzX293bmVyGAIgASgMQgSAtRgGUg1wcmV2aW91c093bmVyEj8KDHBpeGVsX3BsYWNlZBgDIAEoCzIcLmthbnZhc2NvbnRyYWN0LnBpeGVsX29iamVjdFILcGl4ZWxQbGFjZWQSLgoRb3duZXJfcGl4ZWxfY291bnQYBCABKARCAjABUg9vd25lclBpeGVsQ291bnQSPwoacHJldmlvdXNfb3duZXJfcGl4ZWxfY291bnQYBSABKARCAjABUhdwcmV2aW91c093bmVyUGl4ZWxDb3VudCKVAQoScGl4ZWxfZXJhc2VkX2V2ZW50EhgKBGZyb20YASABKAxCBIC1GAZSBGZyb20SFgoEcG9zWBgCIAEoBEICMAFSBHBvc1gSFgoEcG9zWRgDIAEoBEICMAFSBHBvc1kSNQoVb3duZXJfbmV3X3BpeGVsX2NvdW50GAQgASgEQgIwAVISb3duZXJOZXdQaXhlbENvdW50InEKH2NhbnZhc19kaW1lbnNpb25zX2NoYW5nZWRfZXZlbnQSJQoMY2FudmFzX3dpZHRoGAEgASgEQgIwAVILY2FudmFzV2lkdGgSJwoNY2FudmFzX2hlaWdodBgCIAEoBEICMAFSDGNhbnZhc0hlaWdodGIGcHJvdG8zCtgDChxrb2lub3MvY2hhaW4vYXV0aG9yaXR5LnByb3RvEgxrb2lub3MuY2hhaW4aFGtvaW5vcy9vcHRpb25zLnByb3RvIlUKC2NhbGxfdGFyZ2V0EiUKC2NvbnRyYWN0X2lkGAEgASgMQgSAtRgGUgpjb250cmFjdElkEh8KC2VudHJ5X3BvaW50GAIgASgNUgplbnRyeVBvaW50InoKE2F1dGhvcml6ZV9hcmd1bWVudHMSNAoEdHlwZRgBIAEoDjIgLmtvaW5vcy5jaGFpbi5hdXRob3JpemF0aW9uX3R5cGVSBHR5cGUSLQoEY2FsbBgCIAEoCzIZLmtvaW5vcy5jaGFpbi5jYWxsX3RhcmdldFIEY2FsbCIoChBhdXRob3JpemVfcmVzdWx0EhQKBXZhbHVlGAEgASgIUgV2YWx1ZSpZChJhdXRob3JpemF0aW9uX3R5cGUSEQoNY29udHJhY3RfY2FsbBAAEhsKF3RyYW5zYWN0aW9uX2FwcGxpY2F0aW9uEAESEwoPY29udHJhY3RfdXBsb2FkEAJCNFoyZ2l0aHViLmNvbS9rb2lub3Mva29pbm9zLXByb3RvLWdvbGFuZy9rb2lub3MvY2hhaW5iBnByb3RvMw=="
}