{
    "methods": {
        "name": {
            "argument": "kanvascontract.name_arguments",
            "return": "kanvascontract.name_result",
            "description": "Returns the token's name",
            "entry-point": "0x82a3537f",
            "read-only": true
        },
        "symbol": {
            "argument": "kanvascontract.symbol_arguments",
            "return": "kanvascontract.symbol_result",
            "description": "Returns the token's symbol",
            "entry-point": "0xb76a7ca1",
            "read-only": true
        },
        "decimals": {
            "argument": "kanvascontract.decimals_arguments",
            "return": "kanvascontract.decimals_result",
            "description": "Returns the token's decimals precision",
            "entry-point": "0xee80fd2f",
            "read-only": true
        },
        "total_supply": {
            "argument": "kanvascontract.total_supply_arguments",
            "return": "kanvascontract.total_supply_result",
            "description": "Returns the token's total supply",
            "entry-point": "0xb0da3934",
            "read-only": true
        },
        "balance_of": {
            "argument": "kanvascontract.balance_of_arguments",
            "return": "kanvascontract.balance_of_result",
            "description": "Checks the balance at an address",
            "entry-point": "0x5c721497",
            "read-only": true
        },
        "transfer": {
            "argument": "kanvascontract.transfer_arguments",
            "return": "kanvascontract.empty_message",
            "description": "Transfers the token",
            "entry-point": "0x27f576ca",
            "read-only": false
        },
        "mint": {
            "argument": "kanvascontract.mint_arguments",
            "return": "kanvascontract.empty_message",
            "description": "Mints the token",
            "entry-point": "0xdc6f17bb",
            "read-only": false
        },
        "burn": {
            "argument": "kanvascontract.burn_arguments",
            "return": "kanvascontract.empty_message",
            "description": "Burns the token",
            "entry-point": "0x859facc5",
            "read-only": false
        },
        "pixel_count_of": {
            "argument": "kanvascontract.pixel_count_of_arguments",
            "return": "kanvascontract.pixel_count_of_result",
            "description": "Checks the pixels balance at an address",
            "entry-point": "0x3c315b09",
            "read-only": true
        },
        "place_pixel": {
            "argument": "kanvascontract.place_pixel_arguments",
            "return": "kanvascontract.place_pixel_result",
            "description": "Place a new pixel",
            "entry-point": "0xb20ac2e3",
            "read-only": false
        },
        "pixel_at": {
            "argument": "kanvascontract.pixel_at_arguments",
            "return": "kanvascontract.pixel_at_result",
            "description": "Query a pixel at a specific position",
            "entry-point": "0x0d4a1a54",
            "read-only": true
        },
        "canvas_dimensions": {
            "argument": "kanvascontract.canvas_dimensions_arguments",
            "return": "kanvascontract.canvas_dimensions_result",
            "description": "Query the canvas dimensions",
            "entry-point": "0x3489c55e",
            "read-only": true
        },
        "set_canvas_dimensions": {
            "argument": "kanvascontract.set_canvas_dimensions_arguments",
            "return": "kanvascontract.empty_message",
            "description": "Set the canvas dimensions",
            "entry-point": "0xc3268afe",
            "read-only": false
        }
    },
    "types": "CsoUCiNhc3NlbWJseS9wcm90by9rYW52YXNjb250cmFjdC5wcm90bxIOa2FudmFzY29udHJhY3QaFGtvaW5vcy9vcHRpb25zLnByb3RvIg8KDWVtcHR5X21lc3NhZ2UiIgoGdWludDY0EhgKBXZhbHVlGAEgASgEQgIwAVIFdmFsdWUiEAoObmFtZV9hcmd1bWVudHMiIwoLbmFtZV9yZXN1bHQSFAoFdmFsdWUYASABKAlSBXZhbHVlIhIKEHN5bWJvbF9hcmd1bWVudHMiJQoNc3ltYm9sX3Jlc3VsdBIUCgV2YWx1ZRgBIAEoCVIFdmFsdWUiFAoSZGVjaW1hbHNfYXJndW1lbnRzIicKD2RlY2ltYWxzX3Jlc3VsdBIUCgV2YWx1ZRgBIAEoDVIFdmFsdWUiGAoWdG90YWxfc3VwcGx5X2FyZ3VtZW50cyIvChN0b3RhbF9zdXBwbHlfcmVzdWx0EhgKBXZhbHVlGAEgASgEQgIwAVIFdmFsdWUiMgoUYmFsYW5jZV9vZl9hcmd1bWVudHMSGgoFb3duZXIYASABKAxCBIC1GAZSBW93bmVyIi0KEWJhbGFuY2Vfb2ZfcmVzdWx0EhgKBXZhbHVlGAEgASgEQgIwAVIFdmFsdWUiXgoSdHJhbnNmZXJfYXJndW1lbnRzEhgKBGZyb20YASABKAxCBIC1GAZSBGZyb20SFAoCdG8YAiABKAxCBIC1GAZSAnRvEhgKBXZhbHVlGAMgASgEQgIwAVIFdmFsdWUiQAoObWludF9hcmd1bWVudHMSFAoCdG8YASABKAxCBIC1GAZSAnRvEhgKBXZhbHVlGAIgASgEQgIwAVIFdmFsdWUiRAoOYnVybl9hcmd1bWVudHMSGAoEZnJvbRgBIAEoDEIEgLUYBlIEZnJvbRIYCgV2YWx1ZRgCIAEoBEICMAFSBXZhbHVlIjYKGHBpeGVsX2NvdW50X29mX2FyZ3VtZW50cxIaCgVvd25lchgBIAEoDEIEgLUYBlIFb3duZXIiMQoVcGl4ZWxfY291bnRfb2ZfcmVzdWx0EhgKBXZhbHVlGAEgASgEQgIwAVIFdmFsdWUidQoVcGxhY2VfcGl4ZWxfYXJndW1lbnRzEhgKBGZyb20YASABKAxCBIC1GAZSBGZyb20SQgoOcGl4ZWxfdG9fcGxhY2UYAiABKAsyHC5rYW52YXNjb250cmFjdC5waXhlbF9vYmplY3RSDHBpeGVsVG9QbGFjZSKGAgoScGxhY2VfcGl4ZWxfcmVzdWx0ElAKEnBpeGVsX2NvdW50X29iamVjdBgBIAEoCzIiLmthbnZhc2NvbnRyYWN0LnBpeGVsX2NvdW50X29iamVjdFIQcGl4ZWxDb3VudE9iamVjdBJXChZvbGRfcGl4ZWxfY291bnRfb2JqZWN0GAIgASgLMiIua2FudmFzY29udHJhY3QucGl4ZWxfY291bnRfb2JqZWN0UhNvbGRQaXhlbENvdW50T2JqZWN0EkUKDmJhbGFuY2Vfb2JqZWN0GAMgASgLMh4ua2FudmFzY29udHJhY3QuYmFsYW5jZV9vYmplY3RSDWJhbGFuY2VPYmplY3QiRAoScGl4ZWxfYXRfYXJndW1lbnRzEhYKBHBvc1gYASABKARCAjABUgRwb3NYEhYKBHBvc1kYAiABKARCAjABUgRwb3NZIkUKD3BpeGVsX2F0X3Jlc3VsdBIyCgVwaXhlbBgBIAEoCzIcLmthbnZhc2NvbnRyYWN0LnBpeGVsX29iamVjdFIFcGl4ZWwiHQobY2FudmFzX2RpbWVuc2lvbnNfYXJndW1lbnRzImIKGGNhbnZhc19kaW1lbnNpb25zX3Jlc3VsdBIhCgxjYW52YXNfd2lkdGgYASABKARSC2NhbnZhc1dpZHRoEiMKDWNhbnZhc19oZWlnaHQYAiABKARSDGNhbnZhc0hlaWdodCJpCh9zZXRfY2FudmFzX2RpbWVuc2lvbnNfYXJndW1lbnRzEiEKDGNhbnZhc193aWR0aBgBIAEoBFILY2FudmFzV2lkdGgSIwoNY2FudmFzX2hlaWdodBgCIAEoBFIMY2FudmFzSGVpZ2h0IioKDmJhbGFuY2Vfb2JqZWN0EhgKBXZhbHVlGAEgASgEQgIwAVIFdmFsdWUiLgoScGl4ZWxfY291bnRfb2JqZWN0EhgKBXZhbHVlGAEgASgEQgIwAVIFdmFsdWUi2AEKDHBpeGVsX29iamVjdBIWCgRwb3NYGAEgASgEQgIwAVIEcG9zWBIWCgRwb3NZGAIgASgEQgIwAVIEcG9zWRIUCgNyZWQYAyABKARCAjABUgNyZWQSGAoFZ3JlZW4YBCABKARCAjABUgVncmVlbhIWCgRibHVlGAUgASgEQgIwAVIEYmx1ZRIYCgVhbHBoYRgGIAEoBEICMAFSBWFscGhhEhoKCG1ldGFkYXRhGAcgASgJUghtZXRhZGF0YRIaCgVvd25lchgIIAEoDEIEgLUYBlIFb3duZXIiPAoKbWludF9ldmVudBIUCgJ0bxgBIAEoDEIEgLUYBlICdG8SGAoFdmFsdWUYAiABKARCAjABUgV2YWx1ZSJACgpidXJuX2V2ZW50EhgKBGZyb20YASABKAxCBIC1GAZSBGZyb20SGAoFdmFsdWUYAiABKARCAjABUgV2YWx1ZSKkAQoOdHJhbnNmZXJfZXZlbnQSGAoEZnJvbRgBIAEoDEIEgLUYBlIEZnJvbRIUCgJ0bxgCIAEoDEIEgLUYBlICdG8SGAoFdmFsdWUYAyABKARCAjABUgV2YWx1ZRIlCgxmcm9tX2JhbGFuY2UYBCABKARCAjABUgtmcm9tQmFsYW5jZRIhCgp0b19iYWxhbmNlGAUgASgEQgIwAVIJdG9CYWxhbmNlIsECChJwaXhlbF9wbGFjZWRfZXZlbnQSGAoEZnJvbRgBIAEoDEIEgLUYBlIEZnJvbRIrCg5wcmV2aW91c19vd25lchgCIAEoDEIEgLUYBlINcHJldmlvdXNPd25lchI/CgxwaXhlbF9wbGFjZWQYAyABKAsyHC5rYW52YXNjb250cmFjdC5waXhlbF9vYmplY3RSC3BpeGVsUGxhY2VkEi4KEW93bmVyX3BpeGVsX2NvdW50GAQgASgEQgIwAVIPb3duZXJQaXhlbENvdW50Ej8KGnByZXZpb3VzX293bmVyX3BpeGVsX2NvdW50GAUgASgEQgIwAVIXcHJldmlvdXNPd25lclBpeGVsQ291bnQSGAoFYUNvbXAYBiABKARCAjABUgVhQ29tcBIYCgViQ29tcBgHIAEoBEICMAFSBWJDb21wInEKH2NhbnZhc19kaW1lbnNpb25zX2NoYW5nZWRfZXZlbnQSJQoMY2FudmFzX3dpZHRoGAEgASgEQgIwAVILY2FudmFzV2lkdGgSJwoNY2FudmFzX2hlaWdodBgCIAEoBEICMAFSDGNhbnZhc0hlaWdodGIGcHJvdG8z"
}